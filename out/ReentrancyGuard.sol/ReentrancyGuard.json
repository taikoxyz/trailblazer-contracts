{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":murky/=node_modules/murky/src/\",\":openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/\",\":p256-verifier/=node_modules/p256-verifier/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\",\":taiko-mono/=node_modules/taiko-mono/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","murky/=node_modules/murky/src/","openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/","p256-verifier/=node_modules/p256-verifier/","solady/=node_modules/solady/","solidity-stringutils/=node_modules/solidity-stringutils/","taiko-mono/=node_modules/taiko-mono/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":17309,"contract":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":17368,"exportedSymbols":{"ReentrancyGuard":[17367]},"nodeType":"SourceUnit","src":"109:3131:68","nodes":[{"id":17300,"nodeType":"PragmaDirective","src":"109:24:68","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":17367,"nodeType":"ContractDefinition","src":"886:2353:68","nodes":[{"id":17304,"nodeType":"VariableDeclaration","src":"1674:40:68","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:68","scope":17367,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":17303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:68","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":17307,"nodeType":"VariableDeclaration","src":"1720:36:68","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:68","scope":17367,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":17306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:68","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":17309,"nodeType":"VariableDeclaration","src":"1763:23:68","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:68","scope":17367,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":17312,"nodeType":"ErrorDefinition","src":"1850:37:68","nodes":[],"documentation":{"id":17310,"nodeType":"StructuredDocumentation","src":"1793:52:68","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:68","parameters":{"id":17311,"nodeType":"ParameterList","parameters":[],"src":"1884:2:68"}},{"id":17320,"nodeType":"FunctionDefinition","src":"1893:52:68","nodes":[],"body":{"id":17319,"nodeType":"Block","src":"1907:38:68","nodes":[],"statements":[{"expression":{"id":17317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":17315,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17309,"src":"1917:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17316,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17304,"src":"1927:11:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17318,"nodeType":"ExpressionStatement","src":"1917:21:68"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":17313,"nodeType":"ParameterList","parameters":[],"src":"1904:2:68"},"returnParameters":{"id":17314,"nodeType":"ParameterList","parameters":[],"src":"1907:0:68"},"scope":17367,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":17331,"nodeType":"ModifierDefinition","src":"2322:103:68","nodes":[],"body":{"id":17330,"nodeType":"Block","src":"2346:79:68","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":17323,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17347,"src":"2356:19:68","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":17324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17325,"nodeType":"ExpressionStatement","src":"2356:21:68"},{"id":17326,"nodeType":"PlaceholderStatement","src":"2387:1:68"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":17327,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17355,"src":"2398:18:68","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":17328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17329,"nodeType":"ExpressionStatement","src":"2398:20:68"}]},"documentation":{"id":17321,"nodeType":"StructuredDocumentation","src":"1951:366:68","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:68","parameters":{"id":17322,"nodeType":"ParameterList","parameters":[],"src":"2343:2:68"},"virtual":false,"visibility":"internal"},{"id":17347,"nodeType":"FunctionDefinition","src":"2431:307:68","nodes":[],"body":{"id":17346,"nodeType":"Block","src":"2470:268:68","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":17336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":17334,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17309,"src":"2558:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":17335,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17307,"src":"2569:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:68","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17341,"nodeType":"IfStatement","src":"2554:86:68","trueBody":{"id":17340,"nodeType":"Block","src":"2578:62:68","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":17337,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17312,"src":"2599:28:68","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":17338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17339,"nodeType":"RevertStatement","src":"2592:37:68"}]}},{"expression":{"id":17344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":17342,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17309,"src":"2714:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17343,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17307,"src":"2724:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17345,"nodeType":"ExpressionStatement","src":"2714:17:68"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:68","parameters":{"id":17332,"nodeType":"ParameterList","parameters":[],"src":"2459:2:68"},"returnParameters":{"id":17333,"nodeType":"ParameterList","parameters":[],"src":"2470:0:68"},"scope":17367,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":17355,"nodeType":"FunctionDefinition","src":"2744:208:68","nodes":[],"body":{"id":17354,"nodeType":"Block","src":"2782:170:68","nodes":[],"statements":[{"expression":{"id":17352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":17350,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17309,"src":"2924:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17351,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17304,"src":"2934:11:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17353,"nodeType":"ExpressionStatement","src":"2924:21:68"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:68","parameters":{"id":17348,"nodeType":"ParameterList","parameters":[],"src":"2771:2:68"},"returnParameters":{"id":17349,"nodeType":"ParameterList","parameters":[],"src":"2782:0:68"},"scope":17367,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":17366,"nodeType":"FunctionDefinition","src":"3131:106:68","nodes":[],"body":{"id":17365,"nodeType":"Block","src":"3195:42:68","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":17363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":17361,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17309,"src":"3212:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":17362,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17307,"src":"3223:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:68","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":17360,"id":17364,"nodeType":"Return","src":"3205:25:68"}]},"documentation":{"id":17356,"nodeType":"StructuredDocumentation","src":"2958:168:68","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:68","parameters":{"id":17357,"nodeType":"ParameterList","parameters":[],"src":"3163:2:68"},"returnParameters":{"id":17360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17366,"src":"3189:4:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17358,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:68","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:68"},"scope":17367,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":17301,"nodeType":"StructuredDocumentation","src":"135:750:68","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[17367],"name":"ReentrancyGuard","nameLocation":"904:15:68","scope":17368,"usedErrors":[17312],"usedEvents":[]}],"license":"MIT"},"id":68}