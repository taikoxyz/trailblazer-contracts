{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":murky/=node_modules/murky/src/\",\":openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/\",\":p256-verifier/=node_modules/p256-verifier/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\",\":taiko-mono/=node_modules/taiko-mono/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","murky/=node_modules/murky/src/","openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/","p256-verifier/=node_modules/p256-verifier/","solady/=node_modules/solady/","solidity-stringutils/=node_modules/solidity-stringutils/","taiko-mono/=node_modules/taiko-mono/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":18428,"contract":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":18487,"exportedSymbols":{"ReentrancyGuard":[18486]},"nodeType":"SourceUnit","src":"109:3131:72","nodes":[{"id":18419,"nodeType":"PragmaDirective","src":"109:24:72","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":18486,"nodeType":"ContractDefinition","src":"886:2353:72","nodes":[{"id":18423,"nodeType":"VariableDeclaration","src":"1674:40:72","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:72","scope":18486,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":18422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:72","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":18426,"nodeType":"VariableDeclaration","src":"1720:36:72","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:72","scope":18486,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":18425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:72","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":18428,"nodeType":"VariableDeclaration","src":"1763:23:72","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:72","scope":18486,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":18431,"nodeType":"ErrorDefinition","src":"1850:37:72","nodes":[],"documentation":{"id":18429,"nodeType":"StructuredDocumentation","src":"1793:52:72","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:72","parameters":{"id":18430,"nodeType":"ParameterList","parameters":[],"src":"1884:2:72"}},{"id":18439,"nodeType":"FunctionDefinition","src":"1893:52:72","nodes":[],"body":{"id":18438,"nodeType":"Block","src":"1907:38:72","nodes":[],"statements":[{"expression":{"id":18436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18434,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18428,"src":"1917:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18435,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18423,"src":"1927:11:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18437,"nodeType":"ExpressionStatement","src":"1917:21:72"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":18432,"nodeType":"ParameterList","parameters":[],"src":"1904:2:72"},"returnParameters":{"id":18433,"nodeType":"ParameterList","parameters":[],"src":"1907:0:72"},"scope":18486,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":18450,"nodeType":"ModifierDefinition","src":"2322:103:72","nodes":[],"body":{"id":18449,"nodeType":"Block","src":"2346:79:72","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18442,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18466,"src":"2356:19:72","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18444,"nodeType":"ExpressionStatement","src":"2356:21:72"},{"id":18445,"nodeType":"PlaceholderStatement","src":"2387:1:72"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18446,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18474,"src":"2398:18:72","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18448,"nodeType":"ExpressionStatement","src":"2398:20:72"}]},"documentation":{"id":18440,"nodeType":"StructuredDocumentation","src":"1951:366:72","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:72","parameters":{"id":18441,"nodeType":"ParameterList","parameters":[],"src":"2343:2:72"},"virtual":false,"visibility":"internal"},{"id":18466,"nodeType":"FunctionDefinition","src":"2431:307:72","nodes":[],"body":{"id":18465,"nodeType":"Block","src":"2470:268:72","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18453,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18428,"src":"2558:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18454,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18426,"src":"2569:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18460,"nodeType":"IfStatement","src":"2554:86:72","trueBody":{"id":18459,"nodeType":"Block","src":"2578:62:72","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":18456,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18431,"src":"2599:28:72","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":18457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18458,"nodeType":"RevertStatement","src":"2592:37:72"}]}},{"expression":{"id":18463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18461,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18428,"src":"2714:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18462,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18426,"src":"2724:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18464,"nodeType":"ExpressionStatement","src":"2714:17:72"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:72","parameters":{"id":18451,"nodeType":"ParameterList","parameters":[],"src":"2459:2:72"},"returnParameters":{"id":18452,"nodeType":"ParameterList","parameters":[],"src":"2470:0:72"},"scope":18486,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18474,"nodeType":"FunctionDefinition","src":"2744:208:72","nodes":[],"body":{"id":18473,"nodeType":"Block","src":"2782:170:72","nodes":[],"statements":[{"expression":{"id":18471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18469,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18428,"src":"2924:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18470,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18423,"src":"2934:11:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18472,"nodeType":"ExpressionStatement","src":"2924:21:72"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:72","parameters":{"id":18467,"nodeType":"ParameterList","parameters":[],"src":"2771:2:72"},"returnParameters":{"id":18468,"nodeType":"ParameterList","parameters":[],"src":"2782:0:72"},"scope":18486,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18485,"nodeType":"FunctionDefinition","src":"3131:106:72","nodes":[],"body":{"id":18484,"nodeType":"Block","src":"3195:42:72","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18480,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18428,"src":"3212:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18481,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18426,"src":"3223:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":18479,"id":18483,"nodeType":"Return","src":"3205:25:72"}]},"documentation":{"id":18475,"nodeType":"StructuredDocumentation","src":"2958:168:72","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:72","parameters":{"id":18476,"nodeType":"ParameterList","parameters":[],"src":"3163:2:72"},"returnParameters":{"id":18479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18485,"src":"3189:4:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18477,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:72"},"scope":18486,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":18420,"nodeType":"StructuredDocumentation","src":"135:750:72","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[18486],"name":"ReentrancyGuard","nameLocation":"904:15:72","scope":18487,"usedErrors":[18431],"usedEvents":[]}],"license":"MIT"},"id":72}