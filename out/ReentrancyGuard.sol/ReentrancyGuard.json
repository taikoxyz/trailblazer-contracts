{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":murky/=node_modules/murky/src/\",\":openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/\",\":p256-verifier/=node_modules/p256-verifier/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\",\":taiko-mono/=node_modules/taiko-mono/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","murky/=node_modules/murky/src/","openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/","p256-verifier/=node_modules/p256-verifier/","solady/=node_modules/solady/","solidity-stringutils/=node_modules/solidity-stringutils/","taiko-mono/=node_modules/taiko-mono/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":18028,"contract":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":18087,"exportedSymbols":{"ReentrancyGuard":[18086]},"nodeType":"SourceUnit","src":"109:3131:70","nodes":[{"id":18019,"nodeType":"PragmaDirective","src":"109:24:70","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":18086,"nodeType":"ContractDefinition","src":"886:2353:70","nodes":[{"id":18023,"nodeType":"VariableDeclaration","src":"1674:40:70","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:70","scope":18086,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":18022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:70","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":18026,"nodeType":"VariableDeclaration","src":"1720:36:70","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:70","scope":18086,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":18025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:70","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":18028,"nodeType":"VariableDeclaration","src":"1763:23:70","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:70","scope":18086,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":18031,"nodeType":"ErrorDefinition","src":"1850:37:70","nodes":[],"documentation":{"id":18029,"nodeType":"StructuredDocumentation","src":"1793:52:70","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:70","parameters":{"id":18030,"nodeType":"ParameterList","parameters":[],"src":"1884:2:70"}},{"id":18039,"nodeType":"FunctionDefinition","src":"1893:52:70","nodes":[],"body":{"id":18038,"nodeType":"Block","src":"1907:38:70","nodes":[],"statements":[{"expression":{"id":18036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18034,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18028,"src":"1917:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18035,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18023,"src":"1927:11:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18037,"nodeType":"ExpressionStatement","src":"1917:21:70"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":18032,"nodeType":"ParameterList","parameters":[],"src":"1904:2:70"},"returnParameters":{"id":18033,"nodeType":"ParameterList","parameters":[],"src":"1907:0:70"},"scope":18086,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":18050,"nodeType":"ModifierDefinition","src":"2322:103:70","nodes":[],"body":{"id":18049,"nodeType":"Block","src":"2346:79:70","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18042,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18066,"src":"2356:19:70","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18044,"nodeType":"ExpressionStatement","src":"2356:21:70"},{"id":18045,"nodeType":"PlaceholderStatement","src":"2387:1:70"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18046,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18074,"src":"2398:18:70","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18048,"nodeType":"ExpressionStatement","src":"2398:20:70"}]},"documentation":{"id":18040,"nodeType":"StructuredDocumentation","src":"1951:366:70","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:70","parameters":{"id":18041,"nodeType":"ParameterList","parameters":[],"src":"2343:2:70"},"virtual":false,"visibility":"internal"},{"id":18066,"nodeType":"FunctionDefinition","src":"2431:307:70","nodes":[],"body":{"id":18065,"nodeType":"Block","src":"2470:268:70","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18053,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18028,"src":"2558:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18054,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18026,"src":"2569:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18060,"nodeType":"IfStatement","src":"2554:86:70","trueBody":{"id":18059,"nodeType":"Block","src":"2578:62:70","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":18056,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18031,"src":"2599:28:70","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":18057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18058,"nodeType":"RevertStatement","src":"2592:37:70"}]}},{"expression":{"id":18063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18061,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18028,"src":"2714:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18062,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18026,"src":"2724:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18064,"nodeType":"ExpressionStatement","src":"2714:17:70"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:70","parameters":{"id":18051,"nodeType":"ParameterList","parameters":[],"src":"2459:2:70"},"returnParameters":{"id":18052,"nodeType":"ParameterList","parameters":[],"src":"2470:0:70"},"scope":18086,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18074,"nodeType":"FunctionDefinition","src":"2744:208:70","nodes":[],"body":{"id":18073,"nodeType":"Block","src":"2782:170:70","nodes":[],"statements":[{"expression":{"id":18071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18069,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18028,"src":"2924:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18070,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18023,"src":"2934:11:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18072,"nodeType":"ExpressionStatement","src":"2924:21:70"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:70","parameters":{"id":18067,"nodeType":"ParameterList","parameters":[],"src":"2771:2:70"},"returnParameters":{"id":18068,"nodeType":"ParameterList","parameters":[],"src":"2782:0:70"},"scope":18086,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18085,"nodeType":"FunctionDefinition","src":"3131:106:70","nodes":[],"body":{"id":18084,"nodeType":"Block","src":"3195:42:70","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18080,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18028,"src":"3212:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18081,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18026,"src":"3223:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":18079,"id":18083,"nodeType":"Return","src":"3205:25:70"}]},"documentation":{"id":18075,"nodeType":"StructuredDocumentation","src":"2958:168:70","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:70","parameters":{"id":18076,"nodeType":"ParameterList","parameters":[],"src":"3163:2:70"},"returnParameters":{"id":18079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18085,"src":"3189:4:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18077,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:70"},"scope":18086,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":18020,"nodeType":"StructuredDocumentation","src":"135:750:70","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[18086],"name":"ReentrancyGuard","nameLocation":"904:15:70","scope":18087,"usedErrors":[18031],"usedEvents":[]}],"license":"MIT"},"id":70}