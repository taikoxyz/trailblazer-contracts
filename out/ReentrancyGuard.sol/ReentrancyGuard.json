{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/\",\":murky/=node_modules/murky/src/\",\":openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/\",\":p256-verifier/=node_modules/p256-verifier/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\",\":taiko-mono/=node_modules/taiko-mono/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@taiko/blacklist/=node_modules/taiko-mono/packages/supplementary-contracts/contracts/blacklist/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/","murky/=node_modules/murky/src/","openzeppelin-foundry-upgrades/=node_modules/openzeppelin-foundry-upgrades/src/","p256-verifier/=node_modules/p256-verifier/","solady/=node_modules/solady/","solidity-stringutils/=node_modules/solidity-stringutils/","taiko-mono/=node_modules/taiko-mono/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":18950,"exportedSymbols":{"ReentrancyGuard":[18949]},"nodeType":"SourceUnit","src":"109:3131:73","nodes":[{"id":18882,"nodeType":"PragmaDirective","src":"109:24:73","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":18949,"nodeType":"ContractDefinition","src":"886:2353:73","nodes":[{"id":18886,"nodeType":"VariableDeclaration","src":"1674:40:73","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:73","scope":18949,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":18885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:73","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":18889,"nodeType":"VariableDeclaration","src":"1720:36:73","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:73","scope":18949,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":18888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:73","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":18891,"nodeType":"VariableDeclaration","src":"1763:23:73","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:73","scope":18949,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":18894,"nodeType":"ErrorDefinition","src":"1850:37:73","nodes":[],"documentation":{"id":18892,"nodeType":"StructuredDocumentation","src":"1793:52:73","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:73","parameters":{"id":18893,"nodeType":"ParameterList","parameters":[],"src":"1884:2:73"}},{"id":18902,"nodeType":"FunctionDefinition","src":"1893:52:73","nodes":[],"body":{"id":18901,"nodeType":"Block","src":"1907:38:73","nodes":[],"statements":[{"expression":{"id":18899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18897,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18891,"src":"1917:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18898,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18886,"src":"1927:11:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18900,"nodeType":"ExpressionStatement","src":"1917:21:73"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":18895,"nodeType":"ParameterList","parameters":[],"src":"1904:2:73"},"returnParameters":{"id":18896,"nodeType":"ParameterList","parameters":[],"src":"1907:0:73"},"scope":18949,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":18913,"nodeType":"ModifierDefinition","src":"2322:103:73","nodes":[],"body":{"id":18912,"nodeType":"Block","src":"2346:79:73","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18905,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18929,"src":"2356:19:73","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18907,"nodeType":"ExpressionStatement","src":"2356:21:73"},{"id":18908,"nodeType":"PlaceholderStatement","src":"2387:1:73"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18909,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18937,"src":"2398:18:73","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18911,"nodeType":"ExpressionStatement","src":"2398:20:73"}]},"documentation":{"id":18903,"nodeType":"StructuredDocumentation","src":"1951:366:73","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:73","parameters":{"id":18904,"nodeType":"ParameterList","parameters":[],"src":"2343:2:73"},"virtual":false,"visibility":"internal"},{"id":18929,"nodeType":"FunctionDefinition","src":"2431:307:73","nodes":[],"body":{"id":18928,"nodeType":"Block","src":"2470:268:73","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18916,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18891,"src":"2558:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18917,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18889,"src":"2569:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18923,"nodeType":"IfStatement","src":"2554:86:73","trueBody":{"id":18922,"nodeType":"Block","src":"2578:62:73","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":18919,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18894,"src":"2599:28:73","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":18920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18921,"nodeType":"RevertStatement","src":"2592:37:73"}]}},{"expression":{"id":18926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18924,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18891,"src":"2714:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18925,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18889,"src":"2724:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18927,"nodeType":"ExpressionStatement","src":"2714:17:73"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:73","parameters":{"id":18914,"nodeType":"ParameterList","parameters":[],"src":"2459:2:73"},"returnParameters":{"id":18915,"nodeType":"ParameterList","parameters":[],"src":"2470:0:73"},"scope":18949,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18937,"nodeType":"FunctionDefinition","src":"2744:208:73","nodes":[],"body":{"id":18936,"nodeType":"Block","src":"2782:170:73","nodes":[],"statements":[{"expression":{"id":18934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18932,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18891,"src":"2924:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18933,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18886,"src":"2934:11:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18935,"nodeType":"ExpressionStatement","src":"2924:21:73"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:73","parameters":{"id":18930,"nodeType":"ParameterList","parameters":[],"src":"2771:2:73"},"returnParameters":{"id":18931,"nodeType":"ParameterList","parameters":[],"src":"2782:0:73"},"scope":18949,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":18948,"nodeType":"FunctionDefinition","src":"3131:106:73","nodes":[],"body":{"id":18947,"nodeType":"Block","src":"3195:42:73","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":18943,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18891,"src":"3212:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":18944,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18889,"src":"3223:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":18942,"id":18946,"nodeType":"Return","src":"3205:25:73"}]},"documentation":{"id":18938,"nodeType":"StructuredDocumentation","src":"2958:168:73","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:73","parameters":{"id":18939,"nodeType":"ParameterList","parameters":[],"src":"3163:2:73"},"returnParameters":{"id":18942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18948,"src":"3189:4:73","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18940,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:73"},"scope":18949,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":18883,"nodeType":"StructuredDocumentation","src":"135:750:73","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[18949],"name":"ReentrancyGuard","nameLocation":"904:15:73","scope":18950,"usedErrors":[18894],"usedEvents":[]}],"license":"MIT"},"id":73}